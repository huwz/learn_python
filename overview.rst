概述
====

.. note::
 学习 Python 不要将时间浪费在记 API 的功能上，而应该学习 Python 的编程理念。
 
 对于常用的 API，应该熟悉使用方法；记不住也没关系，重要的是要学会使用 ``Python Manuals``。

os 和 sys 模块
--------------

sys 模块与 Python 解析器相关，比如可以设置和访问 sys 的搜索路径。

``sys.path`` 是一个目录的列表，列举了 Python 解析器真正的搜索路径。
当模块被载入时，Python 从左到右依次获取 sys.path 中的目录。
每获取一个目录，就遍历目录中的文件，直至找到和模块名相同的文件名为止。

``sys.path`` 在 Python 解析器运行的时候初始化。
Python 加载环境变量 ``PYHTONPATH`` 的值，作为 ``sys.path`` 的初始值。
当然 ``sys.path`` 的值不都是来自于 ``PYHTONPATH``，它的值是可以修改的。

.. warning:: 对 sys.path 的修改维持到 Python 解析器退出

访问 ``sys.path`` 可以使用 ``sys.getcwd()`` 函数。

.. warning:: 标准输入输出流属于 sys 模块

标准流包括：

* sys.stdin
* sys.stdout
* sys.stderr

os 模块和操作系统相关，它也包含了一些跨平台的接口。还有一个嵌套模块 ``os.path``。

程序使用方式
------------

每个 Python 模块都有一个属性变量 ``__name__``。
当 Python 将模块当做程序运行时，模块的 ``__name__`` 的值为 ``__main__``；
当模块作为库文件加载时，``__name__`` 的值不再是 ``__main__``。

好用的 APIs
-----------

+------+------------------------+
| 名称 | 功能                   |
+======+========================+
| dir  | 列举类的所有属性和成员 |
+------+------------------------+


